buildscript {
    repositories {
        //从中央库里面获取依赖
        mavenCentral()

        //maven {
        //    url "https://oss.sonatype.org/content/repositories/snapshots"
        //}
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

apply plugin: 'com.android.application'

dependencies {
    //android.jar
    //compile files("${android.sdk}/platforms/${android.target}/android.jar")

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':lib:MyCommon')
    compile project(':lib:MyFramework')
    compile project(':lib:MyCommonUI')
    compile project(':lib:DownloadProvider-master')
}

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
        quiet false
        showAll true
    }

    dexOptions { preDexLibraries = false }
}

android {
    compileSdkVersion 19
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
//        minSdkVersion 8
//        targetSdkVersion 19
//        versionCode 1
//        versionName "1.0"
    }

    signingConfigs {
        nbtstatx {
            storeFile file("keystore/nbtstatx.keystore")
            storePassword "nbtstatx"
            keyAlias "nbtstatx"
            keyPassword "nbtstatx"
        }
        debug { storeFile file("keystore/debug.keystore") }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.nbtstatx
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    new File(project(':lib:MyUtil').getProjectDir(), 'util-proguard-rules.txt'),
                    new File(project(':lib:MyCommon').getProjectDir(), 'common-proguard-rules.txt'),
                    'proguard-rules.txt'
        }

        debug {
            signingConfig signingConfigs.debug
            runProguard false
        }
    }

    /*//	设置不同包名的包
     productFlavors {
     full {  packageName='com.nbtstatx.mycommondemo'  }
     //自定义渠道
     //		testPlay {
     //			packageName='com.testplay'
     //			//name=testPlay
     //			//minSdkVersion=8
     //			//targetSdkVersion=10
     //			//renderscriptTargetApi=18
     //			//versionCode=1
     //			//versionName=1.0
     //			//testPackageName=null
     //			//testInstrumentationRunner=null
     //			//signingConfig=signingConfigs.wondertek
     //		}
     }*/

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        instrumentTest.setRoot('tests')

        original.setRoot('build-types/original')

        //testPlay.setRoot('build-types/testplay')
    }
}
