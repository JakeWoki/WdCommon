buildscript {
    repositories {
        //从中央库里面获取依赖
        mavenCentral()
        //maven {
        //    url "https://oss.sonatype.org/content/repositories/snapshots"
        //}
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

apply plugin: 'com.android.application'

dependencies {
    //android.jar
    //compile files("${android.sdk}/platforms/${android.target}/android.jar")
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':lib:MyCommon')
    compile project(':lib:MyFramework')
    compile project(':lib:MyCommonUI')
    compile project(':lib:DownloadProvider-master')

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.1'
}

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
        quiet false
        showAll true
    }

    dexOptions { preDexLibraries = false }
}

android {
    compileSdkVersion Integer.parseInt(project.compileSdkVersion)
    buildToolsVersion project.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion Integer.parseInt(project.minSdkVersion)
        targetSdkVersion Integer.parseInt(project.targetSdkVersion)
        versionCode Integer.parseInt(project.versionCode)
        versionName project.versionName
    }

    signingConfigs {
        release {
            storeFile file(project.storeFile)
            storePassword project.storePassword
            keyAlias project.keyAlias
            keyPassword project.keyPassword
        }
        debug { storeFile file("keystore/debug.keystore") }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    new File(project(':lib:MyUtil').getProjectDir(), 'util-proguard-rules.txt'),
                    new File(project(':lib:MyCommon').getProjectDir(), 'common-proguard-rules.txt'),
                    'proguard-rules.txt'
        }

        debug {
            signingConfig signingConfigs.debug
            runProguard false
        }

        beta {
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    /*//	设置不同包名的包
     productFlavors {
     full {  applicationId 'com.nbtstatx.mycommondemo'  }
     }*/

}
